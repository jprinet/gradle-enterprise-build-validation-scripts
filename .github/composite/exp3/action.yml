name: Run experiment 3
description: "Run Gradle Experiment 3"

inputs:
  repositoryUrl:
    description: "Project repository URL"
    required: true
  branch:
    description: "Git Branch"
    required: true
  task:
    description: "Gradle task"
    required: true
  projectDir:
    description: "Project directory"
    required: false
    default: .
  gradleEnterpriseUrl:
    description: "Gradle Enterprise URL"
    required: true
outputs:
  buildScanId1:
    description: "First build scan identifier"
    value: ${{ steps.run.outputs.buildScanId1 }}
  buildScanId2:
    description: "Second build scan identifier"
    value: ${{ steps.run.outputs.buildScanId2 }}

runs:
  using: "composite"
  steps:
    - name: Run Gradle Experiment 3
      id: run
      run: |
        cd gradle-enterprise-gradle-build-validation

        # add instructions to save build scan urls
        BUILD_SCAN_FILE_1=$(pwd)/exp3-build-scan-url-1.txt
        BUILD_SCAN_FILE_2=$(pwd)/exp3-build-scan-url-2.txt
        echo "echo \${build_scan_urls[0]} > ${BUILD_SCAN_FILE_1}" >> 03-validate-local-build-caching-different-locations.sh
        echo "echo \${build_scan_urls[1]} > ${BUILD_SCAN_FILE_2}" >> 03-validate-local-build-caching-different-locations.sh

        # run experiment
        ./03-validate-local-build-caching-different-locations.sh -r ${{ inputs.repositoryUrl }} -b ${{ inputs.branch }} -t ${{ inputs.task }} -p ${{ inputs.projectDir }} -s ${{ inputs.gradleEnterpriseUrl }}

        # set scan url as output
        echo "::set-output name=buildScanId1::$(cat ${BUILD_SCAN_FILE_1} | sed 's:.*/::')"
        echo "::set-output name=buildScanId2::$(cat ${BUILD_SCAN_FILE_2} | sed 's:.*/::')"
      shell: bash
